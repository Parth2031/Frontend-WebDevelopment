/* TODO:: Understanding CSS Grid Properties and their working */

.container
{
  display: grid;
  grid-gap: 20px;
  
  /* Make the grid 10 columns wide, every other taking up twice the free space */  
  grid-template-columns: [content-start] repeat(5, 1fr 2fr) [content-end];
  
  /* ! In this [content-start/end] are used as naming of grid lines */
  /* Make the grid have 10 explicit rows, 50px high each */
  grid-template-rows: repeat(10, 50px);
  
  /* ? Alternative:: grid-template-rows: repeat(auto-fill/auto-fit, 50px); */
  /* TODO:: grid-auto-flow: dense; */
  /* ! It is filling all the gaps created by instructions by the other elments that could take up the place */ 
  /** place-items: center start;  */
  
  /* TODO:: justify-content: stretch; works only when {grid is not made up of fr units}*/
}

body {
  background: #ffc600;
}

.item
{
  background: rgb(10, 202, 45);
  text-align: center;
}

/* With Item 1, start at col 3 and go until 5 */
.item1
{
  grid-column: 3/5;
  
  /* TODO:: grid-column: content-start; */
  /* ! Naming lines in grid as numbering of item just as the above list */
}

/* With Item 2, start at col 5 and go until end */
.item2
{
  grid-column: 5/-1;  
  /** justify-self: stretch; */
}

/* With Item 5, double span 2 cols and rows */
.item5
{
  grid-column: span 2;
  grid-row: span 2;
}

/* With Item 8, two rows high */
.item8
{
  background: blue;
  grid-row: span 2 !important;
  
  /* TODO:: <!important>: done above when add this to any class at last, it simply makes other class in that tag non-responsive ....
  TODO:: .... since it gets preference over other */
}

/* With Item 15, span the entire grid width */
.item15
{
  grid-column: 1/-1;     /* * <-- span 10 */   
  /* ! Important Note: -1 is used as end part because it takes the entire grid  */  
}

/* With Item 18, span 4 widths, but end 9*/
.item18 {
  grid-column: span 4/9;
}

/* With Item 20, start at row 4 and go for 3 */
.item20 {
  grid-row: 4/span 3;
}


